{"version":3,"sources":["../../src/generators/fragment/index.js"],"names":["VulcanGenerator","require","module","exports","initializing","_assertIsVulcan","_assertHasNonZeroPackages","inputProps","_registerArguments","_registerPackageNameOption","_registerModuleNameOption","prompting","_canPrompt","questions","_getPackageNameListQuestion","_getModuleNameListQuestion","prompt","then","answers","props","packageName","_getFinalPackageName","moduleName","_getFinalModuleName","typeName","_getFinalPascalModuleName","_assertIsPackageExists","_assertIsModuleExists","_writeFragments","fs","copyTpl","templatePath","_getModulePath","isAbsolute","_writeTestFragments","testCollectionProps","subjectName","subjectPath","_getModuleTestPath","_updateModuleIndex","writing","_canWrite","end","_end"],"mappings":";;AAAA,MAAMA,kBAAkBC,QAAQ,2BAAR,CAAxB;;AAEAC,OAAOC,OAAP,GAAiB,cAAcH,eAAd,CAA8B;AAC7CI,iBAAgB;AACd,SAAKC,eAAL;AACA,SAAKC,yBAAL;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACD;;AAEDC,uBAAsB;AACpB,SAAKC,0BAAL;AACA,SAAKC,yBAAL;AACD;;AAEDC,cAAa;AACX,QAAI,CAAC,KAAKC,UAAL,EAAL,EAAwB;AAAE,aAAO,KAAP;AAAe;AACzC,UAAMC,YAAY,CAChB,KAAKC,2BAAL,EADgB,EAEhB,KAAKC,0BAAL,EAFgB,CAAlB;AAIA,WAAO,KAAKC,MAAL,CAAYH,SAAZ,EACNI,IADM,CACAC,OAAD,IAAa;AACjB,WAAKC,KAAL,GAAa;AACXC,qBAAa,KAAKC,oBAAL,CAA0BH,OAA1B,CADF;AAEXI,oBAAY,KAAKC,mBAAL,CAAyBL,OAAzB,CAFD;AAGXM,kBAAU,KAAKC,yBAAL,CAA+BP,OAA/B;AAHC,OAAb;;AAMA,WAAKQ,sBAAL,CAA4B,KAAKP,KAAL,CAAWC,WAAvC;AACA,WAAKO,qBAAL,CAA2B,KAAKR,KAAL,CAAWC,WAAtC,EAAmD,KAAKD,KAAL,CAAWG,UAA9D;AACD,KAVM,CAAP;AAWD;;AAEDM,oBAAmB;AACjB,SAAKC,EAAL,CAAQC,OAAR,CACE,KAAKC,YAAL,CAAkB,cAAlB,CADF,EAEE,KAAKC,cAAL,CAAoB,EAAEC,YAAY,IAAd,EAApB,EAA0C,cAA1C,CAFF,EAGE,KAAKd,KAHP;AAKD;;AAEDe,wBAAuB;AACrB,UAAMC,mCACD,KAAKhB,KADJ;AAEJiB,mBAAa,WAFT;AAGJC,mBAAa;AAHT,MAAN;AAKA,SAAKR,EAAL,CAAQC,OAAR,CACE,KAAKC,YAAL,CAAkB,SAAlB,CADF,EAEE,KAAKO,kBAAL,CAAwB,EAAEL,YAAY,IAAd,EAAxB,EAA8C,cAA9C,CAFF,EAGEE,mBAHF;AAKD;;AAEDI,uBAAsB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDC,YAAW;AACT,QAAI,CAAC,KAAKC,SAAL,EAAL,EAAuB;AAAE;AAAS;AAClC,SAAKb,eAAL;AACA,SAAKM,mBAAL;AACA;AACD;;AAEDQ,QAAO;AACL,SAAKC,IAAL;AACD;AA1E4C,CAA/C","file":"index.js","sourcesContent":["const VulcanGenerator = require('../../lib/VulcanGenerator');\n\nmodule.exports = class extends VulcanGenerator {\n  initializing () {\n    this._assertIsVulcan();\n    this._assertHasNonZeroPackages();\n    this.inputProps = {};\n  }\n\n  _registerArguments () {\n    this._registerPackageNameOption();\n    this._registerModuleNameOption();\n  }\n\n  prompting () {\n    if (!this._canPrompt()) { return false; }\n    const questions = [\n      this._getPackageNameListQuestion(),\n      this._getModuleNameListQuestion(),\n    ];\n    return this.prompt(questions)\n    .then((answers) => {\n      this.props = {\n        packageName: this._getFinalPackageName(answers),\n        moduleName: this._getFinalModuleName(answers),\n        typeName: this._getFinalPascalModuleName(answers),\n      };\n\n      this._assertIsPackageExists(this.props.packageName);\n      this._assertIsModuleExists(this.props.packageName, this.props.moduleName);\n    });\n  }\n\n  _writeFragments () {\n    this.fs.copyTpl(\n      this.templatePath('fragments.js'),\n      this._getModulePath({ isAbsolute: true }, 'fragments.js'),\n      this.props\n    );\n  }\n\n  _writeTestFragments () {\n    const testCollectionProps = {\n      ...this.props,\n      subjectName: 'fragments',\n      subjectPath: '../fragments',\n    };\n    this.fs.copyTpl(\n      this.templatePath('test.js'),\n      this._getModuleTestPath({ isAbsolute: true }, 'fragments.js'),\n      testCollectionProps\n    );\n  }\n\n  _updateModuleIndex () {\n    // const modulePath = this._getModulesPath({ isAbsolute: true }, 'index.js');\n    // const fileText = this.fs.read(modulePath);\n    // const fileWithImportText = ast.addImportStatementAndParse(\n    //   fileText,\n    //   `import './${this.props.moduleName}/collection.js';`\n    // );\n    // this.fs.write(\n    //   modulePath,\n    //   fileWithImportText\n    // );\n  }\n\n  writing () {\n    if (!this._canWrite()) { return; }\n    this._writeFragments();\n    this._writeTestFragments();\n    // this._updateModuleIndex();\n  }\n\n  end () {\n    this._end();\n  }\n};\n"]}