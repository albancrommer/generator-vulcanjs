{"version":3,"sources":["../../src/generators/component/index.js"],"names":["pascalCase","require","chalk","VulcanGenerator","ast","module","exports","initializing","_assertIsVulcan","_assertHasNonZeroPackages","inputProps","_registerArguments","_registerPackageNameOption","_registerModuleNameOption","prompting","_canPrompt","firstQuestions","_getPackageNameListQuestion","prompt","then","answers","props","packageName","_filterPackageName","storyBookSetupStatus","console","log","_assertPackageHasNonZeroModules","secondQuestions","_getModuleNameListQuestion","_getComponentNameQuestion","_getComponentTypeQuestion","_getIsRegisterComponentQuestion","_packageHasNonZeroModules","Promise","reject","moduleName","componentName","componentType","isRegister","isAddComponentToStoryBook","componentPath","_getComponentPath","isAbsolute","templatePath","_assertModuleIsExists","configuring","_canConfigure","_dispatch","type","status","_commitStore","_canInstall","_getStoryBookSetupStatus","_installStorybook","green","spawnCommandSync","_writeComponent","fs","copyTpl","_updateModuleStories","moduleStoriesPath","_getModuleStoriesPath","fileText","read","importStatement","_getComponentFileName","fileWithImportText","addImportStatementAndParse","write","writing","_canWrite","end","_end"],"mappings":"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","file":"index.js","sourcesContent":["const pascalCase = require('pascal-case');\nconst chalk = require('chalk');\nconst VulcanGenerator = require('../../lib/VulcanGenerator');\nconst ast = require('../../lib/ast');\n\nmodule.exports = class extends VulcanGenerator {\n  initializing () {\n    this._assertIsVulcan();\n    this._assertHasNonZeroPackages();\n    this.inputProps = {};\n  }\n\n  _registerArguments () {\n    this._registerPackageNameOption();\n    this._registerModuleNameOption();\n  }\n\n  prompting () {\n    if (!this._canPrompt()) { return false; }\n    const firstQuestions = [\n      // this._getStoryBookSetupQuestion(),\n      this._getPackageNameListQuestion(),\n    ];\n\n    return this.prompt(firstQuestions)\n    .then((answers) => {\n      this.props = {\n        packageName: this._filterPackageName(this.inputProps.packageName || answers.packageName),\n        storyBookSetupStatus: this.inputProps.storyBookSetupStatus || answers.storyBookSetupStatus,\n      };\n      console.log(this.props);\n      this._assertPackageHasNonZeroModules(this.props.packageName);\n      const secondQuestions = [\n        this._getModuleNameListQuestion(),\n        this._getComponentNameQuestion(),\n        this._getComponentTypeQuestion(),\n        this._getIsRegisterComponentQuestion(),\n        // this._getIsAddComponentToStoryBookQuestion(),\n      ];\n      if (this._packageHasNonZeroModules(this.props.packageName)) {\n        return this.prompt(secondQuestions);\n      }\n      return Promise.reject('noModulesInPackage');\n    })\n    .then((answers) => {\n      this.props = {\n        ...this.props,\n        moduleName: this.inputProps.moduleName || answers.moduleName,\n        componentName: pascalCase(this.inputProps.componentName || answers.componentName),\n        componentType: this.inputProps.componentType || answers.componentType,\n        isRegister: this.inputProps.isRegister || answers.isRegister,\n        isAddComponentToStoryBook: (\n          this.inputProps.isAddComponentToStoryBook ||\n          answers.isAddComponentToStoryBook\n        ),\n      };\n      this.props.componentPath = this._getComponentPath({\n        isAbsolute: true,\n      });\n      this.props.templatePath = this.props.componentType === 'pure' ?\n        this.templatePath('pureFunctionComponent.js') :\n        this.templatePath('classComponent.js');\n      this._assertModuleIsExists(this.props.packageName, this.props.moduleName);\n    }, () => {});\n  }\n\n  configuring () {\n    if (!this._canConfigure()) { return; }\n    if (this.props.storyBookSetupStatus) {\n      this._dispatch({\n        type: 'SET_STORYBOOK_SETUP_STATUS',\n        status: this.props.storyBookSetupStatus,\n      });\n    }\n    this._commitStore();\n    // this._installStorybook();\n  }\n\n  _canInstall () {\n    return super._canInstall() && this._getStoryBookSetupStatus() === 'installing';\n  }\n\n  _installStorybook () {\n    if (!this._canInstall()) { return; }\n    this.log(chalk.green('\\nTaking you to react storybook setup... \\n'));\n    this.spawnCommandSync('getstorybook');\n    this._dispatch({\n      type: 'SET_STORYBOOK_SETUP_STATUS',\n      status: 'installed',\n    });\n    this._commitStore();\n  }\n\n  _writeComponent () {\n    this.fs.copyTpl(\n      this.props.templatePath,\n      this.props.componentPath,\n      this.props\n    );\n  }\n\n  _updateModuleStories () {\n    if (!this.props.isAddComponentToStoryBook) { return; }\n    const moduleStoriesPath = this._getModuleStoriesPath({\n      isAbsolute: true,\n    });\n    const fileText = this.fs.read(moduleStoriesPath);\n    const importStatement = `import ${this.props.componentName} from './${this._getComponentFileName()};'`\n    console.log(importStatement);\n    const fileWithImportText = ast.addImportStatementAndParse(\n      fileText,\n      importStatement,\n    );\n    this.fs.write(\n      moduleStoriesPath,\n      fileWithImportText\n    );\n  }\n\n  writing () {\n    if (!this._canWrite()) { return; }\n    this._writeComponent();\n    this._updateModuleStories();\n  }\n\n  end () {\n    this._end();\n  }\n};\n"]}