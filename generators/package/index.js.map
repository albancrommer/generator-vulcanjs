{"version":3,"sources":["../../src/generators/package/index.js"],"names":["chalk","require","VulcanGenerator","ast","module","exports","initializing","_assertIsVulcan","inputProps","_registerArguments","_registerPackageNameOption","prompting","_canPrompt","questions","_getPackageNameInputQuestion","_getVulcanDependenciesQuestion","prompt","then","answers","preProcessedDeps","vulcanDependencies","props","packageName","_filterPackageName","map","dep","isPackageAutoAdd","_assertNotPackageExists","configuring","_canConfigure","_dispatch","type","_commitStore","_writePackageJs","fs","copyTpl","templatePath","_getPackagePath","isAbsolute","_writeClientMain","_getClientPath","_writeServerMain","_getServerPath","_writeServerSeed","_writeModulesIndex","_getModulesPath","_writeRoutes","_writeStoriesJs","_getPackageStoriesPath","_updateRootStoriesIndex","rootStoriesIndexPath","_getRootStoriesPath","exists","packageStoriesPath","relativeTo","fileText","read","importStatement","fileTextWithWithImport","addImportStatementAndParse","write","writing","_canWrite","end","_end","_hasNoErrors","log","green"],"mappings":"AAAA,MAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,MAAMC,kBAAkBD,QAAQ,2BAAR,CAAxB;AACA,MAAME,MAAMF,QAAQ,eAAR,CAAZ;;AAEAG,OAAOC,OAAP,GAAiB,cAAcH,eAAd,CAA8B;;AAE7CI,iBAAgB;AACd,SAAKC,eAAL;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACD;;AAEDC,uBAAsB;AACpB,SAAKC,0BAAL;AACD;;AAEDC,cAAa;AACX,QAAI,CAAC,KAAKC,UAAL,EAAL,EAAwB;AAAE,aAAO,KAAP;AAAe;AACzC,UAAMC,YAAY,CAChB,KAAKC,4BAAL,EADgB,EAEhB,KAAKC,8BAAL,EAFgB,CAAlB;;AAMA,WAAO,KAAKC,MAAL,CAAYH,SAAZ,EAAuBI,IAAvB,CAA6BC,OAAD,IAAa;AAC9C,YAAMC,mBACJ,KAAKX,UAAL,CAAgBY,kBAAhB,IACAF,QAAQE,kBAFV;AAGA,WAAKC,KAAL,GAAa;AACXC,qBAAa,KAAKC,kBAAL,CAAwB,KAAKf,UAAL,CAAgBc,WAAhB,IAA+BJ,QAAQI,WAA/D,CADF;AAEXF,4BAAoBD,iBAAiBK,GAAjB,CAAsBC,GAAD,IAAW,IAAGA,GAAI,GAAvC,CAFT;AAGXC,0BAAkB,KAAKlB,UAAL,CAAgBkB,gBAAhB,IAAoCR,QAAQQ;AAHnD,OAAb;AAKA,WAAKC,uBAAL,CAA6B,KAAKN,KAAL,CAAWC,WAAxC;AACD,KAVM,CAAP;AAWD;;AAEDM,gBAAe;AACb,QAAI,CAAC,KAAKC,aAAL,EAAL,EAA2B;AAAE;AAAS;AACtC,SAAKC,SAAL,CAAe;AACbC,YAAM,aADO;AAEbT,mBAAa,KAAKD,KAAL,CAAWC;AAFX,KAAf;AAIA,SAAKU,YAAL;AACD;;AAEDC,oBAAmB;AACjB,SAAKC,EAAL,CAAQC,OAAR,CACE,KAAKC,YAAL,CAAkB,YAAlB,CADF,EAEE,KAAKC,eAAL,CAAqB,EAAEC,YAAY,IAAd,EAArB,EAA2C,YAA3C,CAFF,EAGE,KAAKjB,KAHP;AAKD;;AAEDkB,qBAAoB;AAClB,SAAKL,EAAL,CAAQC,OAAR,CACE,KAAKC,YAAL,CAAkB,WAAlB,CADF,EAEE,KAAKI,cAAL,CAAoB,EAAEF,YAAY,IAAd,EAApB,EAA0C,SAA1C,CAFF,EAGE,KAAKjB,KAHP;AAKD;;AAEDoB,qBAAoB;AAClB,SAAKP,EAAL,CAAQC,OAAR,CACE,KAAKC,YAAL,CAAkB,WAAlB,CADF,EAEE,KAAKM,cAAL,CAAoB,EAAEJ,YAAY,IAAd,EAApB,EAA0C,SAA1C,CAFF,EAGE,KAAKjB,KAHP;AAKD;;AAEDsB,qBAAoB;AAClB,SAAKT,EAAL,CAAQC,OAAR,CACE,KAAKC,YAAL,CAAkB,SAAlB,CADF,EAEE,KAAKM,cAAL,CAAoB,EAAEJ,YAAY,IAAd,EAApB,EAA0C,SAA1C,CAFF,EAGE,KAAKjB,KAHP;AAKD;;AAEDuB,uBAAsB;AACpB,SAAKV,EAAL,CAAQC,OAAR,CACE,KAAKC,YAAL,CAAkB,WAAlB,CADF,EAEE,KAAKS,eAAL,CAAqB,EAAEP,YAAY,IAAd,EAArB,EAA2C,UAA3C,CAFF,EAGE,KAAKjB,KAHP;AAKD;;AAEDyB,iBAAgB;AACd,SAAKZ,EAAL,CAAQC,OAAR,CACE,KAAKC,YAAL,CAAkB,WAAlB,CADF,EAEE,KAAKS,eAAL,CAAqB,EAAEP,YAAY,IAAd,EAArB,EAA2C,WAA3C,CAFF,EAGE,KAAKjB,KAHP;AAKD;;AAED0B,oBAAmB;AACjB,SAAKb,EAAL,CAAQC,OAAR,CACE,KAAKC,YAAL,CAAkB,YAAlB,CADF,EAEE,KAAKY,sBAAL,CAA4B,EAAEV,YAAY,IAAd,EAA5B,CAFF,EAGE,KAAKjB,KAHP;AAKD;;AAED4B,4BAA2B;AACzB,UAAMC,uBAAuB,KAAKC,mBAAL,CAC3B,EAAEb,YAAY,IAAd,EAD2B,EAE3B,UAF2B,CAA7B;AAIA,QAAI,CAAC,KAAKJ,EAAL,CAAQkB,MAAR,CAAeF,oBAAf,CAAL,EAA2C;AAAE;AAAS;AACtD,UAAMG,qBAAqB,KAAKL,sBAAL,CAA4B;AACrDM,kBAAY,KAAKH,mBAAL,CAAyB;AACnCb,oBAAY;AADuB,OAAzB;AADyC,KAA5B,CAA3B;AAKA,UAAMiB,WAAW,KAAKrB,EAAL,CAAQsB,IAAR,CAAaN,oBAAb,CAAjB;AACA,UAAMO,kBAAmB,WAAUJ,kBAAmB,IAAtD;AACA,UAAMK,yBAAyBvD,IAAIwD,0BAAJ,CAA+BJ,QAA/B,EAAyCE,eAAzC,CAA/B;AACA,SAAKvB,EAAL,CAAQ0B,KAAR,CACEV,oBADF,EAEEQ,sBAFF;AAID;;AAEDG,YAAW;AACT,QAAI,CAAC,KAAKC,SAAL,EAAL,EAAuB;AAAE;AAAS;AAClC,SAAK7B,eAAL;AACA,SAAKM,gBAAL;AACA,SAAKE,gBAAL;AACA,SAAKE,gBAAL;AACA,SAAKC,kBAAL;AACA,SAAKE,YAAL;AACA,SAAKC,eAAL;AACA;AACD;;AAEDgB,QAAO;AACL,SAAKC,IAAL;AACA,QAAI,CAAC,KAAKC,YAAL,EAAL,EAA0B;AAAE;AAAS;AACrC,SAAKC,GAAL,CAAU,oCAAmClE,MAAMmE,KAAN,CAAa,cAAa,KAAK9C,KAAL,CAAWC,WAAY,EAAjD,CAAoD,EAAjG;AACD;AArI4C,CAA/C","file":"index.js","sourcesContent":["const chalk = require('chalk');\nconst VulcanGenerator = require('../../lib/VulcanGenerator');\nconst ast = require('../../lib/ast');\n\nmodule.exports = class extends VulcanGenerator {\n\n  initializing () {\n    this._assertIsVulcan();\n    this.inputProps = {};\n  }\n\n  _registerArguments () {\n    this._registerPackageNameOption();\n  }\n\n  prompting () {\n    if (!this._canPrompt()) { return false; }\n    const questions = [\n      this._getPackageNameInputQuestion(),\n      this._getVulcanDependenciesQuestion(),\n      // this._getIsPackageAutoAddQuestion(),\n    ];\n\n    return this.prompt(questions).then((answers) => {\n      const preProcessedDeps =\n        this.inputProps.vulcanDependencies ||\n        answers.vulcanDependencies;\n      this.props = {\n        packageName: this._filterPackageName(this.inputProps.packageName || answers.packageName),\n        vulcanDependencies: preProcessedDeps.map((dep) => (`'${dep}'`)),\n        isPackageAutoAdd: this.inputProps.isPackageAutoAdd || answers.isPackageAutoAdd,\n      };\n      this._assertNotPackageExists(this.props.packageName);\n    });\n  }\n\n  configuring () {\n    if (!this._canConfigure()) { return; }\n    this._dispatch({\n      type: 'ADD_PACKAGE',\n      packageName: this.props.packageName,\n    });\n    this._commitStore();\n  }\n\n  _writePackageJs () {\n    this.fs.copyTpl(\n      this.templatePath('package.js'),\n      this._getPackagePath({ isAbsolute: true }, 'package.js'),\n      this.props\n    );\n  }\n\n  _writeClientMain () {\n    this.fs.copyTpl(\n      this.templatePath('client.js'),\n      this._getClientPath({ isAbsolute: true }, 'main.js'),\n      this.props\n    );\n  }\n\n  _writeServerMain () {\n    this.fs.copyTpl(\n      this.templatePath('server.js'),\n      this._getServerPath({ isAbsolute: true }, 'main.js'),\n      this.props\n    );\n  }\n\n  _writeServerSeed () {\n    this.fs.copyTpl(\n      this.templatePath('seed.js'),\n      this._getServerPath({ isAbsolute: true }, 'seed.js'),\n      this.props\n    );\n  }\n\n  _writeModulesIndex () {\n    this.fs.copyTpl(\n      this.templatePath('module.js'),\n      this._getModulesPath({ isAbsolute: true }, 'index.js'),\n      this.props\n    );\n  }\n\n  _writeRoutes () {\n    this.fs.copyTpl(\n      this.templatePath('routes.js'),\n      this._getModulesPath({ isAbsolute: true }, 'routes.js'),\n      this.props\n    );\n  }\n\n  _writeStoriesJs () {\n    this.fs.copyTpl(\n      this.templatePath('stories.js'),\n      this._getPackageStoriesPath({ isAbsolute: true }),\n      this.props\n    );\n  }\n\n  _updateRootStoriesIndex () {\n    const rootStoriesIndexPath = this._getRootStoriesPath(\n      { isAbsolute: true },\n      'index.js'\n    );\n    if (!this.fs.exists(rootStoriesIndexPath)) { return; }\n    const packageStoriesPath = this._getPackageStoriesPath({\n      relativeTo: this._getRootStoriesPath({\n        isAbsolute: true,\n      }),\n    });\n    const fileText = this.fs.read(rootStoriesIndexPath);\n    const importStatement = `import '${packageStoriesPath}';`;\n    const fileTextWithWithImport = ast.addImportStatementAndParse(fileText, importStatement);\n    this.fs.write(\n      rootStoriesIndexPath,\n      fileTextWithWithImport\n    );\n  }\n\n  writing () {\n    if (!this._canWrite()) { return; }\n    this._writePackageJs();\n    this._writeClientMain();\n    this._writeServerMain();\n    this._writeServerSeed();\n    this._writeModulesIndex();\n    this._writeRoutes();\n    this._writeStoriesJs();\n    // this._updateRootStoriesIndex();\n  }\n\n  end () {\n    this._end();\n    if (!this._hasNoErrors()) { return; }\n    this.log(`\\nTo activate your package, run: ${chalk.green(`meteor add ${this.props.packageName}`)}`);\n  }\n};\n"]}